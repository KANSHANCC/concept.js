/**
* @license
* Copyright 2010-2024 Concept.js Authors
* SPDX-License-Identifier: MIT
*/
class e{constructor(e){}createElement(e,t=""){let n=document.createElement(e.tagName);for(const t in e.attrs)n.setAttribute(t,e.attrs[t]);return n.innerHTML=t,n}clearBr(e){for(let t=e.childNodes.length-1;t>=0;t--){let n=e.childNodes[t];(n instanceof HTMLBRElement||"\n"===n.data)&&e.removeChild(n)}}}const t={tagName:"div",attrs:{class:"concept-basic concept-text",id:"",style:"width: 100%;",contenteditable:"plaintext-only",placeholder:"Write something"}};class n extends e{constructor(e){super(e),this.el=e}textEvent(e){console.log(e);let t=e.target||e.srcElement;if("insertLineBreak"===e.inputType){let e=t.lastChild;t.removeChild(e);let n=this.createBasic(e.data);this.el.insertBefore(n,t.nextSibling)}this.clearBr(t)}createBasic(e){let n=this.createElement(t,e);return this.bindEvent(n,"input",this.textEvent),n}bindEvent(e,t,n){let i=n.bind(this);e.addEventListener(t,i)}unbindEvent(e,t){e.removeEventListener(t)}handleDOMDeletion(e){this.unbindEvent(e)}}class i{constructor(e){this.el=e,this.event=new n(this.el),this.el.appendChild(this.event.createBasic())}}export{i as default};
